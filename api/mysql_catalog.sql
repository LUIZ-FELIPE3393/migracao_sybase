DROP SCHEMA procedures;

CREATE SCHEMA procedures;

USE procedures;

DROP PROCEDURE IF EXISTS listar_bancos;
DELIMITER ##
CREATE PROCEDURE listar_bancos ()
BEGIN
	SELECT SCHEMA_NAME as name
	FROM INFORMATION_SCHEMA.SCHEMATA
	WHERE SCHEMA_NAME NOT IN ('information_schema', 'mysql', 'performance_schema', 'sys');
END ##
DELIMITER ;

CALL listar_bancos ();

DROP PROCEDURE IF EXISTS listar_tabelas;
DELIMITER ##
CREATE PROCEDURE listar_tabelas (db_name VARCHAR(64))
BEGIN
	SELECT TABLE_NAME as name
	FROM INFORMATION_SCHEMA.TABLES
	WHERE TABLE_SCHEMA = db_name
	  AND TABLE_TYPE = 'BASE TABLE'
	  AND TABLE_SCHEMA IN (
		SELECT SCHEMA_NAME
		FROM INFORMATION_SCHEMA.SCHEMATA
	);
END ##
DELIMITER ;

CALL listar_tabelas ('bd2024');

DROP PROCEDURE IF EXISTS listar_colunas;
DELIMITER ##
CREATE PROCEDURE listar_colunas (db_name VARCHAR(64), tb_name VARCHAR(128))
BEGIN
	SELECT
		c.COLUMN_NAME as name,
		c.DATA_TYPE as type,
        c.CHARACTER_MAXIMUM_LENGTH as length,
        c.NUMERIC_PRECISION as prec,
        c.NUMERIC_SCALE as scale,
		CASE
			WHEN k.COLUMN_NAME IS NOT NULL THEN 'YES'
			ELSE 'NO'
		END AS pk
	FROM
		INFORMATION_SCHEMA.COLUMNS c
	LEFT JOIN
		INFORMATION_SCHEMA.KEY_COLUMN_USAGE k
	ON
		c.TABLE_SCHEMA = k.TABLE_SCHEMA
		AND c.TABLE_NAME = k.TABLE_NAME
		AND c.COLUMN_NAME = k.COLUMN_NAME
		AND k.CONSTRAINT_NAME = 'PRIMARY'
	WHERE
		c.TABLE_SCHEMA = db_name
		AND c.TABLE_NAME = tb_name
	ORDER BY
		c.ORDINAL_POSITION;
END ##
DELIMITER ;

CALL listar_colunas ('bd2024', 'cliente');

DROP PROCEDURE IF EXISTS listar_referencias;
DELIMITER ##
CREATE PROCEDURE listar_referencias (db_name VARCHAR(64), tb_name VARCHAR(128))
BEGIN
	SELECT
		kcu.REFERENCED_TABLE_NAME AS ref_table,
		kcu.COLUMN_NAME AS pk,
		kcu.REFERENCED_COLUMN_NAME AS fk
	FROM
		INFORMATION_SCHEMA.KEY_COLUMN_USAGE kcu
	WHERE
		kcu.TABLE_SCHEMA = db_name
		AND kcu.TABLE_NAME = tb_name
		AND kcu.REFERENCED_TABLE_NAME IS NOT NULL
	ORDER BY
		kcu.CONSTRAINT_NAME,
		kcu.ORDINAL_POSITION;
END ##
DELIMITER ;

CALL listar_referencias ('bd2024', 'cliente');